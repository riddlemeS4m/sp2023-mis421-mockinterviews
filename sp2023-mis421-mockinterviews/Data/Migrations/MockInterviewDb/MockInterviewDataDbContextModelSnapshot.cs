// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sp2023_mis421_mockinterviews.Data;

#nullable disable

namespace sp2023_mis421_mockinterviews.Data.Migrations.MockInterviewDb
{
    [DbContext(typeof(MockInterviewDataDbContext))]
    partial class MockInterviewDataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("sp2023_mis421_mockinterviews.Models.MockInterviewDb.EventDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventDate");
                });

            modelBuilder.Entity("sp2023_mis421_mockinterviews.Models.MockInterviewDb.FAQs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FAQs");
                });

            modelBuilder.Entity("sp2023_mis421_mockinterviews.Models.MockInterviewDb.Interviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Interviewer");
                });

            modelBuilder.Entity("sp2023_mis421_mockinterviews.Models.MockInterviewDb.InterviewEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("InterviewType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterviewerFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterviewerRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("ProcessFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SignupInterviewerTimeslotId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeslotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("SignupInterviewerTimeslotId");

                    b.HasIndex("TimeslotId");

                    b.ToTable("InterviewEvent");
                });

            modelBuilder.Entity("sp2023_mis421_mockinterviews.Models.MockInterviewDb.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("InPerson")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVirtual")
                        .HasColumnType("bit");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("sp2023_mis421_mockinterviews.Models.MockInterviewDb.LocationInterviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("InterviewerId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InterviewerId");

                    b.HasIndex("LocationId");

                    b.ToTable("LocationInterviewer");
                });

            modelBuilder.Entity("sp2023_mis421_mockinterviews.Models.MockInterviewDb.SignupInterviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InterviewerId")
                        .HasColumnType("int");

                    b.Property<string>("IsBehavioral")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsTechnical")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsVirtual")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InterviewerId");

                    b.ToTable("SignupInterviewer");
                });

            modelBuilder.Entity("sp2023_mis421_mockinterviews.Models.MockInterviewDb.SignupInterviewerTimeslot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("SignupInterviewerId")
                        .HasColumnType("int");

                    b.Property<int>("TimeslotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SignupInterviewerId");

                    b.HasIndex("TimeslotId");

                    b.ToTable("SignupInterviewerTimeslot");
                });

            modelBuilder.Entity("sp2023_mis421_mockinterviews.Models.MockInterviewDb.Timeslot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EventDateId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInterviewer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStudent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVolunteer")
                        .HasColumnType("bit");

                    b.Property<int>("MaxSignUps")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventDateId");

                    b.ToTable("Timeslot");
                });

            modelBuilder.Entity("sp2023_mis421_mockinterviews.Models.MockInterviewDb.VolunteerEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeslotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TimeslotId");

                    b.ToTable("VolunteerEvent");
                });

            modelBuilder.Entity("sp2023_mis421_mockinterviews.Models.MockInterviewDb.InterviewEvent", b =>
                {
                    b.HasOne("sp2023_mis421_mockinterviews.Models.MockInterviewDb.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("sp2023_mis421_mockinterviews.Models.MockInterviewDb.SignupInterviewerTimeslot", "SignupInterviewerTimeslot")
                        .WithMany()
                        .HasForeignKey("SignupInterviewerTimeslotId");

                    b.HasOne("sp2023_mis421_mockinterviews.Models.MockInterviewDb.Timeslot", "Timeslot")
                        .WithMany()
                        .HasForeignKey("TimeslotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("SignupInterviewerTimeslot");

                    b.Navigation("Timeslot");
                });

            modelBuilder.Entity("sp2023_mis421_mockinterviews.Models.MockInterviewDb.LocationInterviewer", b =>
                {
                    b.HasOne("sp2023_mis421_mockinterviews.Models.MockInterviewDb.Interviewer", "Interviewer")
                        .WithMany()
                        .HasForeignKey("InterviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sp2023_mis421_mockinterviews.Models.MockInterviewDb.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interviewer");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("sp2023_mis421_mockinterviews.Models.MockInterviewDb.SignupInterviewer", b =>
                {
                    b.HasOne("sp2023_mis421_mockinterviews.Models.MockInterviewDb.Interviewer", "Interviewer")
                        .WithMany()
                        .HasForeignKey("InterviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interviewer");
                });

            modelBuilder.Entity("sp2023_mis421_mockinterviews.Models.MockInterviewDb.SignupInterviewerTimeslot", b =>
                {
                    b.HasOne("sp2023_mis421_mockinterviews.Models.MockInterviewDb.SignupInterviewer", "SignupInterviewer")
                        .WithMany()
                        .HasForeignKey("SignupInterviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sp2023_mis421_mockinterviews.Models.MockInterviewDb.Timeslot", "Timeslot")
                        .WithMany()
                        .HasForeignKey("TimeslotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SignupInterviewer");

                    b.Navigation("Timeslot");
                });

            modelBuilder.Entity("sp2023_mis421_mockinterviews.Models.MockInterviewDb.Timeslot", b =>
                {
                    b.HasOne("sp2023_mis421_mockinterviews.Models.MockInterviewDb.EventDate", "EventDate")
                        .WithMany()
                        .HasForeignKey("EventDateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventDate");
                });

            modelBuilder.Entity("sp2023_mis421_mockinterviews.Models.MockInterviewDb.VolunteerEvent", b =>
                {
                    b.HasOne("sp2023_mis421_mockinterviews.Models.MockInterviewDb.Timeslot", "Timeslot")
                        .WithMany()
                        .HasForeignKey("TimeslotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Timeslot");
                });
#pragma warning restore 612, 618
        }
    }
}
