@using sp2023_mis421_mockinterviews.Models.MockInterviewDb
@model IEnumerable<FAQs>

<!DOCTYPE html>
<html>
<head>
	<title>FAQs</title>
	<style>
		.faq {
			display: flex;
			flex-direction: column;
			align-items: center;
			margin-bottom: 20px;
			max-width: 600px;
			padding: 20px;
			border: 1px solid #ccc;
			border-radius: 5px;
			text-align: center;
		}
		.question {
			font-size: 24px;
			font-weight: bold;
			margin-bottom: 10px;
		}
		.answer {
			font-size: 16px;
			margin-left: 20px;
		}
	</style>
	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
	<script>
		function generateText() {
			const prompt = document.getElementById("prompt").value;

			axios.post("https://api.openai.com/v1/engines/davinci/completions", {
				prompt: prompt,
				temperature: 0.5,
				max_tokens: 50
			}, {
				headers: {
					"Authorization": "Bearer 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"
				}
			})
				.then(response => {
					const text = response.data.choices[0].text;
					document.getElementById("output").innerText = text;
				})
				.catch(error => {
					console.error(error);
					document.getElementById("output").innerText = "Error: " + error.message;
				});
		}
	</script>
</head>
<body>
	<h1>FAQs</h1>
	@foreach (var faq in Model)
	{
		<div class="faq">
			<div class="question">@faq.Question</div>
			<div class="answer">@faq.Answer</div>
		</div>
	}





@using (Html.BeginForm("Chat", "FAQs", FormMethod.Post))
{
    <div class="form-group">
        <label for="prompt">Prompt:</label>
        <input type="text" name="prompt" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
}

<div id="response">
    @Html.Partial("_ChatResponse")
</div>
	</body>
</html>


