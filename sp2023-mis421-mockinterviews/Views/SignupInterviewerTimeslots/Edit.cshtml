@using sp2023_mis421_mockinterviews.Data.Constants
@model sp2023_mis421_mockinterviews.Models.ViewModels.SignupInterviewerTimeslotsViewModel

@{
    ViewData["Title"] = "Edit Interviewer Availability";
}

<h1>Editing Availability for @Model.SignupInterviewer.FirstName @Model.SignupInterviewer.LastName</h1>
<hr />
<div class="row">
    <div class="col-md-3"></div>
    <div class="col-md-6">
        <form asp-action="Edit">
            <input type="hidden" asp-for="SignupInterviewer.Id" />
            <input type="hidden" asp-for="SignupInterviewer.InterviewerId" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div id="center-everything">
                <label asp-for="SignupInterviewer.InPerson" class="control-label">Will you be in person or online?</label>
                <br />
                <div class="form-check form-check-inline">
                    <input 
                        id="InPerson" 
                        class="form-check-input" 
                        type="radio" 
                        name="SignupInterviewer.InPerson" 
                        value="true"
                        checked="@Model.SignupInterviewer.InPerson"
                        data-val="true" 
                        data-val-required="Please select at least one" 
                    >
                    <label class="form-check-label" for="InPerson">In Person</label>
                </div>
                <div class="form-check form-check-inline">
                    <input 
                        id="InPerson" 
                        class="form-check-input" 
                        type="radio" 
                        name="SignupInterviewer.InPerson" 
                        value="false"
                        checked="@Model.SignupInterviewer.IsVirtual"
                        data-val="true" 
                        data-val-required="Please select at least one"                         
                    >
                    <label id="annoyingLabel" class="form-check-label" for="IsVirtual">Virtual</label>
                </div>
                <div>
                    <span asp-validation-for="SignupInterviewer.InPerson" class="text-danger"></span>
                </div>
            </div>
            <br />

            <div id="center-everything">
                <div id="lunch-question" style="display: none;">
                    <label asp-for="SignupInterviewer.Lunch" class="control-label">Do you want lunch?</label>
                    <br />
                    <div class="form-check form-check-inline">
                        <input 
                            id="LunchTrue" 
                            class="form-check-input" 
                            type="radio" 
                            name="Lunch" 
                            value="true" 
                            data-val="false" 
                            checked="@Model.SignupInterviewer.Lunch">
                        <label class="form-check-label" for="LunchTrue">Yes</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input 
                            id="LunchFalse" 
                            class="form-check-input" 
                            type="radio" 
                            name="Lunch" 
                            value="false" 
                            data-val="false" 
                            checked="@Model.SignupInterviewer.!Lunch">
                        <label class="form-check-label" for="LunchFalse">No</label>
                    </div>
                    <div>
                        <span asp-validation-for="SignupInterviewer.Lunch" class="text-danger"></span>
                    </div>
                    <br /><br />
                </div>
            </div>

            <div id="center-everything">
                <label class="control-label">What types of interviews would you be comfortable giving?</label>
                <br />
                <div class="form-check form-check-inline">
                    <input 
                        id="IsTechnical" 
                        class="form-check-input" 
                        type="checkbox" 
                        name="SignupInterviewer.IsTechnical" 
                        value="true" 
                        data-val="true" 
                        data-val-required="Please select at least one" 
                        checked="@Model.SignupInterviewer.IsTechnical">
                    <label for="IsTechnical" class="form-check-label">Technical Interviews</label>
                </div>
                <br />
                <div class="form-check form-check-inline">
                    <input 
                        id="IsBehavioral" 
                        class="form-check-input" 
                        type="checkbox" 
                        name="SignupInterviewer.IsBehavioral" 
                        value="true" 
                        data-val="true" 
                        data-val-required="Please select at least one" 
                        checked="@Model.SignupInterviewer.IsBehavioral">
                    <label for="IsBehavioral" class="form-check-label">Behavioral Interviews</label>
                </div>
                <br />
                <div class="form-check form-check-inline">
                    <input 
                        id="IsCase" 
                        class="form-check-input" 
                        type="checkbox" 
                        name="SignupInterviewer.IsCase" 
                        value="true" 
                        data-val="true" 
                        data-val-required="Please select at least one" 
                        checked="@Model.SignupInterviewer.IsCase">
                    <label for="IsCase" class="form-check-label">Case Interviews</label>
                </div>
                <div>
                    <span asp-validation-for="SignupInterviewer.IsTechnical" class="text-danger"></span>
                </div>
            </div>

            <br /><br />
            <div class="row" id="center-everything">
                <div class="col-md-6">
                    <button 
                        type="button" 
                        class="selectAllButton btn btn-primary" 
                        data-target="SelectedEventIds1">Select Day @(Model.EventDates.IndexOf(Model.EventDates[0]) + 1)</button>
                </div>
                <br />
                @if (Model.Timeslots[0].EventDateId != Model.Timeslots[^1].EventDateId)
                {
                    <div class="col-md-6">
                        <button 
                            type="button" 
                            class="selectAllButton btn btn-primary" 
                            data-target="SelectedEventIds2">Select Day @(Model.EventDates.IndexOf(Model.EventDates[^1]) + 1)</button>
                    </div>
                }
                <br />
            </div>
            <br />

            <div class="row" id="center-everything">
                <div class="col-md-6">
                    <h3>@Model.Timeslots[0].EventDate.EventName</h3>
                    <h4 class="date-column">@Model.Timeslots[0].EventDate.Date</h4>
                    @foreach (var timeslot in Model.Timeslots)
                    {
                        if (timeslot.EventDateId == Model.Timeslots[0].EventDateId)
                        {
                            <div>
                                <input 
                                    type="checkbox" 
                                    class="form-check-input" 
                                    id="@timeslot.Id" 
                                    name="SelectedEventIds1" 
                                    value="@timeslot.Id" 
                                    data-val="true" 
                                    data-val-required="Please select at least one timeslot" 
                                    checked="@Model.EventDateDictionary[timeslot.Id]">
                                <input type="hidden" name="Timeslots[@timeslot.Id]" value="@timeslot.Id">
                                <label class="time-column" for="@timeslot.Id">@timeslot.Time</label>
                            </div>
                        }
                    }
                </div>
                @if (Model.Timeslots[0].EventDateId != Model.Timeslots[^1].EventDateId)
                {
                    <div class="col-md-6">
                        <h3>@Model.Timeslots[^1].EventDate.EventName</h3>
                        <h4 class="date-column">@Model.Timeslots[^1].EventDate.Date</h4>
                        @foreach (var timeslot in Model.Timeslots)
                        {
                            if (timeslot.EventDateId == Model.Timeslots[^1].EventDateId)
                            {
                                <div>
                                    <input 
                                        type="checkbox" 
                                        class="form-check-input" 
                                        id="@timeslot.Id" 
                                        name="SelectedEventIds2" 
                                        value="@timeslot.Id" 
                                        data-val="true" 
                                        data-val-required="Please select at least one timeslot" 
                                        checked="@Model.EventDateDictionary[timeslot.Id]">
                                    <input type="hidden" name="Timeslots[@timeslot.Id]" value="@timeslot.Id">
                                    <label class="time-column" for="@timeslot.Id">@timeslot.Time</label>
                                </div>
                            }
                        }
                    </div>
                }
                <br />
                <div>
                    <span asp-validation-for="SelectedEventIds" class="text-danger"></span>
                </div>
                <div class="form-group" id="center-everything">
                    <input type="submit" value="Reschedule" class="btn btn-primary" /> | 
                    @if(User.IsInRole(RolesConstants.AdminRole))
                    {
                        <a class="btn btn-secondary" asp-controller="SignupInterviewers" asp-action="Index">Go Back</a>
                    }
                    else
                    {
                        <a class="btn btn-secondary" asp-controller="Home" asp-action="Index">Go Back</a>
                    }
                </div>
            </div>
            <br />
        </form>
    </div>
    <div class="col-md-3"></div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <!-- Select All Button -->
    <script>
        var selectAllButtons = document.querySelectorAll('.selectAllButton');
        selectAllButtons.forEach(function (button) {
            button.addEventListener("click", function () {
                var target = this.getAttribute("data-target"); // "list1" or "list2"
                var checkboxes = document.querySelectorAll('input[name="' + target + '"]');
                var allChecked = Array.from(checkboxes).every(function (checkbox) {
                    return checkbox.checked;
                });

                checkboxes.forEach(function (checkbox) {
                    checkbox.checked = !allChecked;
                });
            });
        });
    </script>

    <!-- Toggle Lunch Question -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var checkbox1 = document.querySelector("#InPerson[value='true']");
            var checkbox2 = document.querySelector("#InPerson[value='false']");
            var checkbox2Label = document.getElementById('annoyingLabel');
            var divToToggle = document.getElementById('lunch-question'); // Replace 'divToToggle' with the actual ID of your target div

            checkbox1.addEventListener('click', function () {
                divToToggle.style.display = 'block';
            });
            checkbox2.addEventListener('click', function () {
                divToToggle.style.display = 'none';
            });
            checkbox2Label.addEventListener('click', function () {
                checkbox2.checked = !checkbox2.checked;
                divToToggle.style.display = 'none';
            });
        });
    </script>
}
