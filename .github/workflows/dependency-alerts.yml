name: Dependency Alerts

on:
  schedule:
    - cron: '0 9 * * 1'       # Mondays 09:00 UTC
  workflow_dispatch:
  pull_request:
    paths:
      - '**/*.csproj'
      - 'Directory.Packages.props'
      - 'global.json'
      - 'NuGet.config'

jobs:
  check-updates:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write   # only used for PR comments step below
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install dotnet-outdated
        run: dotnet tool install --global dotnet-outdated-tool

      - name: Restore (CPM-aware)
        run: dotnet restore

      # This step FAILS the job when updates exist
      - name: Check for outdated packages
        id: outdated
        run: dotnet outdated --output json > outdated.json

      - name: Upload JSON report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: outdated-report
          path: outdated.json
          if-no-files-found: ignore

      - name: Comment on PR (optional)
        if: ${{ github.event_name == 'pull_request' && failure() }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let summary = '⚠️ **dotnet-outdated** found newer package versions. See `outdated-report` artifact.';
            try {
              const j = JSON.parse(fs.readFileSync('outdated.json','utf8'));
              const projects = (j.projects || j.Projects || []);
              const lines = [];
              for (const p of projects) {
                const name = p.name || p.Name || 'project';
                const deps = (p.dependencies || p.Dependencies || []).filter(d => d.latestVersion && d.resolvedVersion && d.latestVersion !== d.resolvedVersion);
                if (deps.length) lines.push(`- **${name}**: ${deps.length} outdated`);
              }
              if (lines.length) summary += '\n\n' + lines.join('\n');
            } catch {}
            github.rest.issues.createComment({ ...context.repo, issue_number: context.issue.number, body: summary });
